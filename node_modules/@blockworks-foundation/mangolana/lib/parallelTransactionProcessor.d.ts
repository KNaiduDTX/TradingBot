import { Connection, Keypair, TransactionInstruction } from '@solana/web3.js';
import { TransactionInstructionWithSigners, WalletSigner } from './globalTypes';
export declare class _TransactionInstructionWithIndex extends TransactionInstructionWithSigners {
    index: number;
    constructor(transactionInstruction: TransactionInstruction, signers: Keypair[] | undefined, index: number);
}
export type _SendedTransactionWithTimestamp = {
    id: string;
    timestamp: number;
    index: number;
    sendedAtBlock: number;
};
export type _SendedTransactionWithIndex = {
    id: string;
    index: number;
};
export type parallelTransactionProcessorProps = {
    transactionInstructionsWithSigners: TransactionInstructionWithSigners[];
    connection: Connection;
    wallet: WalletSigner;
    batchSize?: number;
    maxRetryNumber?: number;
};
/**
 * sign, send and wait for confirmation of parallel transactions, best for in code keypair wallet
 */
export declare const parallelTransactionProcessor: ({ transactionInstructionsWithSigners, connection, wallet, batchSize, maxRetryNumber, }: parallelTransactionProcessorProps) => Promise<unknown>;
