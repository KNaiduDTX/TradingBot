var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { Queue, State } from "./accounts";
import { getDefaultQueue } from "./utils";
(() => __awaiter(void 0, void 0, void 0, function* () {
    const queue = yield getDefaultQueue();
    const state = yield State.loadData(queue.program);
    console.log(state.guardianQueue.toString());
    const guardianQueue = new Queue(queue.program, state.guardianQueue);
    const data = yield guardianQueue.loadData();
    //   console.log(JSON.stringify(data, null, 2));
}))();
//# sourceMappingURL=sandbox.js.map