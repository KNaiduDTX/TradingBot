import { PublicKey, TransactionInstruction } from "@solana/web3.js";
import { Order } from "../rpc_client/accounts/Order";
import Decimal from "decimal.js";
export type OrderStateAndAddress = {
    state: Order;
    address: PublicKey;
};
export type OrderDisplay = {
    address: PublicKey;
    state: Order;
    maker: PublicKey;
    initialInputAmountDecimal: Decimal;
    expectedOutputAmountDecimal: Decimal;
    remainingInputAmountDecimal: Decimal;
    filledOutputAmountDecimal: Decimal;
    orderFillPct: Decimal;
    orderPriceInputToOutput: Decimal;
    orderPriceOutputToInput: Decimal;
    executionPriceInputToOutput: Decimal;
    executionPriceOutputToInput: Decimal;
    orderTipLamports: Decimal;
    orderTipDecimal: Decimal;
    numberOfFills: number;
};
export type FilledOrder = {
    address: PublicKey;
    orderDisplay: OrderDisplay;
    quoteTokenMint: PublicKey;
    baseTokenMint: PublicKey;
    time: number;
    price: Decimal;
    size: Decimal;
    txid: string;
    type: "sell" | "buy";
};
export type FlashTakeOrderIxs = {
    createAtaIxs: TransactionInstruction[];
    startFlashIx: TransactionInstruction;
    endFlashIx: TransactionInstruction;
    closeWsolAtaIxs: TransactionInstruction[];
};
export type OrderListenerCallbackOnChange = (orderStateAndAddress: OrderStateAndAddress, slot: number) => void;
export declare class FilledOrderQueue<V> {
    private queue;
    private maxSize;
    constructor(maxSize?: number, initialOrders?: FilledOrder[]);
    push(order: FilledOrder): void;
    pop(): FilledOrder | undefined;
    getOrders(): FilledOrder[];
}
//# sourceMappingURL=types.d.ts.map