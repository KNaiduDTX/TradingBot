import { PublicKey } from "@solana/web3.js";
import { TransactionInstruction } from "@solana/web3.js";
import { BN } from "@coral-xyz/anchor";
import { UpdateGlobalConfigModeKind } from "../rpc_client/types/index";
import { GlobalConfig } from "../rpc_client/accounts";
export interface OrderParams {
    quoteTokenMint: PublicKey;
    baseTokenMint: PublicKey;
    quoteTokenAmount: BN;
    baseTokenAmount: BN;
    side: "bid" | "ask";
}
export declare function initializeGlobalConfig(adminAuthority: PublicKey, globalConfig: PublicKey, pdaAuthority: PublicKey, programId: PublicKey): TransactionInstruction;
export declare function initializeVault(owner: PublicKey, globalConfig: PublicKey, mint: PublicKey, programId: PublicKey, mintProgramId: PublicKey): TransactionInstruction;
export declare function createOrder(maker: PublicKey, globalConfig: PublicKey, order: PublicKey, orderParams: OrderParams, programId: PublicKey, baseTokenMintProgramId: PublicKey, quoteTokenMintProgramId: PublicKey): TransactionInstruction;
export declare function takeOrder(params: {
    taker: PublicKey;
    maker: PublicKey;
    globalConfig: PublicKey;
    inputMint: PublicKey;
    outputMint: PublicKey;
    order: PublicKey;
    inputAmountLamports: BN;
    minOutputAmountLamports: BN;
    programId: PublicKey;
    expressRelayProgramId: PublicKey;
    takerInputAta: PublicKey;
    takerOutputAta: PublicKey;
    intermediaryOutputTokenAccount: PublicKey;
    makerOutputAta: PublicKey;
    inputTokenProgram: PublicKey;
    outputTokenProgram: PublicKey;
    permissionlessTipLamports: BN;
    permissionless: boolean;
}): TransactionInstruction;
export declare function flashTakeOrder(params: {
    taker: PublicKey;
    maker: PublicKey;
    globalConfig: PublicKey;
    inputMint: PublicKey;
    outputMint: PublicKey;
    order: PublicKey;
    inputAmountLamports: BN;
    minOutputAmountLamports: BN;
    programId: PublicKey;
    expressRelayProgramId: PublicKey;
    takerInputAta: PublicKey;
    takerOutputAta: PublicKey;
    intermediaryOutputTokenAccount: PublicKey;
    makerOutputAta: PublicKey;
    inputTokenProgram: PublicKey;
    outputTokenProgram: PublicKey;
    permissionlessTipLamports: BN | undefined;
    permissionless: boolean;
}): {
    startIx: TransactionInstruction;
    endIx: TransactionInstruction;
};
export declare function closeOrderAndClaimTip(params: {
    maker: PublicKey;
    globalConfig: PublicKey;
    inputMint: PublicKey;
    outputMint: PublicKey;
    order: PublicKey;
    programId: PublicKey;
    makerInputAta: PublicKey;
    inputTokenProgram: PublicKey;
}): TransactionInstruction;
export declare function withdrawHostTipIx(params: {
    admin: PublicKey;
    globalConfig: PublicKey;
    programId: PublicKey;
}): TransactionInstruction;
export declare function updateGlobalConfigIx(admin: PublicKey, globalConfig: PublicKey, mode: UpdateGlobalConfigModeKind, value: number | PublicKey, programId: PublicKey): TransactionInstruction;
export declare function updateGlobalConfigAdminIx(globalConfigAddress: PublicKey, globalConfig: GlobalConfig, programId: PublicKey): TransactionInstruction;
//# sourceMappingURL=operations.d.ts.map