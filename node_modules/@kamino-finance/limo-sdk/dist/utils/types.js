"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilledOrderQueue = void 0;
class FilledOrderQueue {
    queue;
    maxSize;
    constructor(maxSize = 10, initialOrders = []) {
        this.queue = [];
        this.maxSize = maxSize;
    }
    push(order) {
        // Check if the order is already in the queue
        const existingIndex = this.queue.findIndex((o) => o.address.equals(order.address));
        if (existingIndex !== -1) {
            // If the order already exists, remove it
            this.queue.splice(existingIndex, 1);
        }
        // Add the new order to the end of the queue
        this.queue.push(order);
        // Ensure only top `maxSize` orders are kept
        if (this.queue.length > this.maxSize) {
            this.queue.shift(); // Remove the oldest order
        }
    }
    pop() {
        return this.queue.shift(); // Remove and return the oldest order
    }
    getOrders() {
        return [...this.queue];
    }
}
exports.FilledOrderQueue = FilledOrderQueue;
//# sourceMappingURL=types.js.map