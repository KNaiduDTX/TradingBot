"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateAtaCreationCost = exports.UpdateTxnFeeCost = exports.UpdateOrderCloseDelaySeconds = exports.UpdateOrderTakingPermissionless = exports.UpdateAdminAuthorityCached = exports.UpdateHostFeeBps = exports.UpdateBlockOrderTaking = exports.UpdateBlockNewOrders = exports.UpdateFlashTakeOrderBlocked = exports.UpdateEmergencyMode = void 0;
exports.fromDecoded = fromDecoded;
exports.fromJSON = fromJSON;
exports.layout = layout;
const borsh = __importStar(require("@coral-xyz/borsh"));
class UpdateEmergencyMode {
    static discriminator = 0;
    static kind = "UpdateEmergencyMode";
    discriminator = 0;
    kind = "UpdateEmergencyMode";
    toJSON() {
        return {
            kind: "UpdateEmergencyMode",
        };
    }
    toEncodable() {
        return {
            UpdateEmergencyMode: {},
        };
    }
}
exports.UpdateEmergencyMode = UpdateEmergencyMode;
class UpdateFlashTakeOrderBlocked {
    static discriminator = 1;
    static kind = "UpdateFlashTakeOrderBlocked";
    discriminator = 1;
    kind = "UpdateFlashTakeOrderBlocked";
    toJSON() {
        return {
            kind: "UpdateFlashTakeOrderBlocked",
        };
    }
    toEncodable() {
        return {
            UpdateFlashTakeOrderBlocked: {},
        };
    }
}
exports.UpdateFlashTakeOrderBlocked = UpdateFlashTakeOrderBlocked;
class UpdateBlockNewOrders {
    static discriminator = 2;
    static kind = "UpdateBlockNewOrders";
    discriminator = 2;
    kind = "UpdateBlockNewOrders";
    toJSON() {
        return {
            kind: "UpdateBlockNewOrders",
        };
    }
    toEncodable() {
        return {
            UpdateBlockNewOrders: {},
        };
    }
}
exports.UpdateBlockNewOrders = UpdateBlockNewOrders;
class UpdateBlockOrderTaking {
    static discriminator = 3;
    static kind = "UpdateBlockOrderTaking";
    discriminator = 3;
    kind = "UpdateBlockOrderTaking";
    toJSON() {
        return {
            kind: "UpdateBlockOrderTaking",
        };
    }
    toEncodable() {
        return {
            UpdateBlockOrderTaking: {},
        };
    }
}
exports.UpdateBlockOrderTaking = UpdateBlockOrderTaking;
class UpdateHostFeeBps {
    static discriminator = 4;
    static kind = "UpdateHostFeeBps";
    discriminator = 4;
    kind = "UpdateHostFeeBps";
    toJSON() {
        return {
            kind: "UpdateHostFeeBps",
        };
    }
    toEncodable() {
        return {
            UpdateHostFeeBps: {},
        };
    }
}
exports.UpdateHostFeeBps = UpdateHostFeeBps;
class UpdateAdminAuthorityCached {
    static discriminator = 5;
    static kind = "UpdateAdminAuthorityCached";
    discriminator = 5;
    kind = "UpdateAdminAuthorityCached";
    toJSON() {
        return {
            kind: "UpdateAdminAuthorityCached",
        };
    }
    toEncodable() {
        return {
            UpdateAdminAuthorityCached: {},
        };
    }
}
exports.UpdateAdminAuthorityCached = UpdateAdminAuthorityCached;
class UpdateOrderTakingPermissionless {
    static discriminator = 6;
    static kind = "UpdateOrderTakingPermissionless";
    discriminator = 6;
    kind = "UpdateOrderTakingPermissionless";
    toJSON() {
        return {
            kind: "UpdateOrderTakingPermissionless",
        };
    }
    toEncodable() {
        return {
            UpdateOrderTakingPermissionless: {},
        };
    }
}
exports.UpdateOrderTakingPermissionless = UpdateOrderTakingPermissionless;
class UpdateOrderCloseDelaySeconds {
    static discriminator = 7;
    static kind = "UpdateOrderCloseDelaySeconds";
    discriminator = 7;
    kind = "UpdateOrderCloseDelaySeconds";
    toJSON() {
        return {
            kind: "UpdateOrderCloseDelaySeconds",
        };
    }
    toEncodable() {
        return {
            UpdateOrderCloseDelaySeconds: {},
        };
    }
}
exports.UpdateOrderCloseDelaySeconds = UpdateOrderCloseDelaySeconds;
class UpdateTxnFeeCost {
    static discriminator = 8;
    static kind = "UpdateTxnFeeCost";
    discriminator = 8;
    kind = "UpdateTxnFeeCost";
    toJSON() {
        return {
            kind: "UpdateTxnFeeCost",
        };
    }
    toEncodable() {
        return {
            UpdateTxnFeeCost: {},
        };
    }
}
exports.UpdateTxnFeeCost = UpdateTxnFeeCost;
class UpdateAtaCreationCost {
    static discriminator = 9;
    static kind = "UpdateAtaCreationCost";
    discriminator = 9;
    kind = "UpdateAtaCreationCost";
    toJSON() {
        return {
            kind: "UpdateAtaCreationCost",
        };
    }
    toEncodable() {
        return {
            UpdateAtaCreationCost: {},
        };
    }
}
exports.UpdateAtaCreationCost = UpdateAtaCreationCost;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function fromDecoded(obj) {
    if (typeof obj !== "object") {
        throw new Error("Invalid enum object");
    }
    if ("UpdateEmergencyMode" in obj) {
        return new UpdateEmergencyMode();
    }
    if ("UpdateFlashTakeOrderBlocked" in obj) {
        return new UpdateFlashTakeOrderBlocked();
    }
    if ("UpdateBlockNewOrders" in obj) {
        return new UpdateBlockNewOrders();
    }
    if ("UpdateBlockOrderTaking" in obj) {
        return new UpdateBlockOrderTaking();
    }
    if ("UpdateHostFeeBps" in obj) {
        return new UpdateHostFeeBps();
    }
    if ("UpdateAdminAuthorityCached" in obj) {
        return new UpdateAdminAuthorityCached();
    }
    if ("UpdateOrderTakingPermissionless" in obj) {
        return new UpdateOrderTakingPermissionless();
    }
    if ("UpdateOrderCloseDelaySeconds" in obj) {
        return new UpdateOrderCloseDelaySeconds();
    }
    if ("UpdateTxnFeeCost" in obj) {
        return new UpdateTxnFeeCost();
    }
    if ("UpdateAtaCreationCost" in obj) {
        return new UpdateAtaCreationCost();
    }
    throw new Error("Invalid enum object");
}
function fromJSON(obj) {
    switch (obj.kind) {
        case "UpdateEmergencyMode": {
            return new UpdateEmergencyMode();
        }
        case "UpdateFlashTakeOrderBlocked": {
            return new UpdateFlashTakeOrderBlocked();
        }
        case "UpdateBlockNewOrders": {
            return new UpdateBlockNewOrders();
        }
        case "UpdateBlockOrderTaking": {
            return new UpdateBlockOrderTaking();
        }
        case "UpdateHostFeeBps": {
            return new UpdateHostFeeBps();
        }
        case "UpdateAdminAuthorityCached": {
            return new UpdateAdminAuthorityCached();
        }
        case "UpdateOrderTakingPermissionless": {
            return new UpdateOrderTakingPermissionless();
        }
        case "UpdateOrderCloseDelaySeconds": {
            return new UpdateOrderCloseDelaySeconds();
        }
        case "UpdateTxnFeeCost": {
            return new UpdateTxnFeeCost();
        }
        case "UpdateAtaCreationCost": {
            return new UpdateAtaCreationCost();
        }
    }
}
function layout(property) {
    const ret = borsh.rustEnum([
        borsh.struct([], "UpdateEmergencyMode"),
        borsh.struct([], "UpdateFlashTakeOrderBlocked"),
        borsh.struct([], "UpdateBlockNewOrders"),
        borsh.struct([], "UpdateBlockOrderTaking"),
        borsh.struct([], "UpdateHostFeeBps"),
        borsh.struct([], "UpdateAdminAuthorityCached"),
        borsh.struct([], "UpdateOrderTakingPermissionless"),
        borsh.struct([], "UpdateOrderCloseDelaySeconds"),
        borsh.struct([], "UpdateTxnFeeCost"),
        borsh.struct([], "UpdateAtaCreationCost"),
    ]);
    if (property !== undefined) {
        return ret.replicate(property);
    }
    return ret;
}
//# sourceMappingURL=UpdateGlobalConfigMode.js.map