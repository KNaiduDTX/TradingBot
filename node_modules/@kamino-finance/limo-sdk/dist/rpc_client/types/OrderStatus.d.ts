import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface ActiveJSON {
    kind: "Active";
}
export declare class Active {
    static readonly discriminator = 0;
    static readonly kind = "Active";
    readonly discriminator = 0;
    readonly kind = "Active";
    toJSON(): ActiveJSON;
    toEncodable(): {
        Active: {};
    };
}
export interface FilledJSON {
    kind: "Filled";
}
export declare class Filled {
    static readonly discriminator = 1;
    static readonly kind = "Filled";
    readonly discriminator = 1;
    readonly kind = "Filled";
    toJSON(): FilledJSON;
    toEncodable(): {
        Filled: {};
    };
}
export interface CancelledJSON {
    kind: "Cancelled";
}
export declare class Cancelled {
    static readonly discriminator = 2;
    static readonly kind = "Cancelled";
    readonly discriminator = 2;
    readonly kind = "Cancelled";
    toJSON(): CancelledJSON;
    toEncodable(): {
        Cancelled: {};
    };
}
export declare function fromDecoded(obj: any): types.OrderStatusKind;
export declare function fromJSON(obj: types.OrderStatusJSON): types.OrderStatusKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=OrderStatus.d.ts.map